Recursion --------

function call itself again and again.



//eg 1).
function rec(i,n){
  //base case
  if(i>n)return;

  //recursive case
  rec(i+1,n);
}


//eg 2) find factorial using recursion.
//n!=n*(n-1)*(n-2)*.....1

/*iterative method */
function factorial (n){
  let result = 1;      
  for(let i=n;i>0;i--){
      result = result*i  
    }
    return result
}
 //or
/*recursive method */

 function fac(n){
    if(n<=0) return 1     //base condition
    return  n*fac(n-1)    //recursive method tail
 }
 factorial(6)

//eg 3) product of array element
 
 function product(arr){
  if(arr.length==0) return 1              //base
  return arr[0] * product(arr.splice(1))  // recursion tail
 }
 product([3,5,2,8,1,2,3,2])

 //eg 4)  sum of first n numbers
   
 function sumOfN(n){
  if(n<=0) return 0 //base
  return n+sumOfN(n-1);
 }

 //eg 5) nth fibonacci numbers
  
 function fib(n){
   if(n=0)return 0;             //base cond
   if(n=1) return 1;            //base cond

   return fib(n-1)+ fib(n-2)    //recursive cond tail
  }
 console.log(fib(7));

 //eg 6) find power(a,b) i.e.(a**b)
   
 function pow(a,b){
   if(b==0) return 1;       //base cond
   return  a*pow(a,b-1)     //recusive tail
  }
 console.log(2,3)




 //recursive part I

  //Q1) 509. Fibonacci Number

 var fib = function(n) {
  if(n<2)return n;              //base condition
    return fib(n-2)+fib(n-1);  //recurision (it call fun again for fib(n-1) & fib(n-2) time O(n)-->(2**n)
};


//Q2) 342. Power of Four

var isPowerOfFour = function(n) {
  if(n===1 || n===4) return true;
  if(n<4) return false;
  return isPowerOfFour(n/4)
};


//recursive part II

//Q1) 231. Power of Two

var isPowerOfTwo = function(n) {
  if(n===1 ||n===2) return true
  if(n<2) return false
   return isPowerOfTwo(n/2)
}; 

//Q2) 326. Power of Three
  var isPowerOfTwo = function(n) {
    if(n==1 ||n==2) return true
    if(n<2) return false
    else   isPowerTwo(n/2)
};

//Q3) palindrome

var isPalindrome = function(s) {
  
  if(s.length==0)return true
  
  s=s.toLowerCase()
  
  let i=0,j=s.length-1
  while(i<j){
      if( (s[i]>"a" || s[i]<"z") &&  (s[i]<"9"||s[i]>"0")){
         i++
         continue;}
     if(  (s[j]>"a" || s[j]<"z") &&   (s[j]<"9" || s[j]>"0") ){
         j--
         continue;} 
     
      if(s[i]!==s[j]){return false} 
  }
  return true
};






